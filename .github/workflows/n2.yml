name: Secure Code Scan with Artifacts

on:
  pull_request:
    branches:
      - main  # Specify the branch for PR checks

permissions:
  contents: write
  pull-requests: write  # Required to merge or comment on PRs

jobs:
  sast_scan:
    name: Run Bandit and Upload Results
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Bandit
      run: pip install bandit

    - name: Run Bandit Scan
      id: bandit_scan
      run: |
        bandit -ll -r . -f json -o bandit-report.json || true
        cat bandit-report.json

    - name: Upload Bandit Results
      uses: actions/upload-artifact@v3
      with:
        name: bandit-findings
        path: bandit-report.json

  analyze_findings:
    name: Analyze Findings and Comment on PR
    runs-on: ubuntu-latest
    needs: sast_scan  # Ensures this job runs after the scan

    steps:
    - name: Download Bandit Artifact
      uses: actions/download-artifact@v3
      with:
        name: bandit-findings
        path: ./  # Download to the current directory

    - name: Analyze Bandit Findings
      id: analyze_findings
      run: |
        CRITICAL_COUNT=$(jq '[.results[] | select(.issue_severity=="CRITICAL")] | length' bandit-report.json)
        echo "CRITICAL_COUNT=$CRITICAL_COUNT" >> $GITHUB_ENV

    - name: Set Block Variable
      id: set_block
      run: |
        if [ "$CRITICAL_COUNT" -gt 0 ]; then
          echo "BLOCK=true" >> $GITHUB_ENV
        else
          echo "BLOCK=false" >> $GITHUB_ENV
        fi

        - name: Comment on PR
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BLOCK: ${{ env.BLOCK }}
        CRITICAL_COUNT: ${{ env.CRITICAL_COUNT }}
      run: |
        # Extract PR Number directly
        PR_NUMBER=${{ github.event.pull_request.number }}
        
        # Debugging: Print PR_NUMBER
        echo "PR_NUMBER=$PR_NUMBER"

        # Post appropriate comment based on the block status
        if [ "$BLOCK" == "true" ]; then
          curl -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments \
            -d '{"body": "**Bandit Scan Report:**\nCritical vulnerabilities detected. PR is blocked."}'
        else
          curl -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments \
            -d '{"body": "Bandit Scan passed successfully! PR is auto-merged."}'
        fi  # Ensure proper closure of 'if' block

  auto_merge:
    name: Auto-Merge PR
    runs-on: ubuntu-latest
    needs: analyze_findings

    if: needs.analyze_findings.outputs.BLOCK == 'false'
    steps:
    - name: Auto-merge Pull Request
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh pr merge ${{ github.event.pull_request.number }} --merge --admin

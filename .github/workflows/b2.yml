name: Bandit Code Scan

on:
  pull_request:

permissions:
  pull-requests: write
  contents: write

jobs:
  bandit_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          pip install bandit

      - name: Run Bandit
        id: bandit_scan
        run: bandit -r . -f json -o bandit_output.json || true

      - name: Analyze Bandit Results
        id: analyze_results
        run: |
          if [ -s bandit_output.json ]; then
            CRITICAL_COUNT=$(jq '[.results[] | select(.issue_severity=="CRITICAL")] | length' bandit_output.json)
            if [ "$CRITICAL_COUNT" -gt 0 ]; then
              echo "block=true" >> $GITHUB_ENV
            else
              echo "block=false" >> $GITHUB_ENV
            fi
          else
            echo "block=false" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Add PR Comment and Block/Merge
        run: |
          if [ "$block" == "true" ]; then
            gh pr comment ${{ github.event.pull_request.number }} --body 'Block'
            exit 1
          else
            gh pr comment ${{ github.event.pull_request.number }} --body 'Successful'
            gh pr merge ${{ github.event.pull_request.number }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug Bandit Output
        run: |
         echo "Contents of bandit_output.json:"
         cat bandit_output.json
       
